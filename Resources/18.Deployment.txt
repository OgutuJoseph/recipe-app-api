Section 18: Deployment





136. Deployment plan 
• 




173. Django deployment overview 
• 




138. Add uWSGI to project 
• 




139. Create proxy configs 
• 




140. Create proxy Dockerfile 
• 




141. Handling configuration 
• 




142. Create docker compose config 
• 




143. Update Django settings
•
    -> docker-compose -f docker-compose-deploy.yml up




144. Creating a virtual server 
• 




145. Create AWS account and user
• 




146. Upload SSH Key to AWS 
• Get ssh key (on .ssh directory)
    ♦ From /.ssh directory
        --> ssh-keygen -t rsa -b 4096
                • Enter file in which to save the key (C:\Users\AB030WP\.ssh):  C:\Users\AB030WP\.ssh\aws_id_rsa
                • Enter passphrase : <password>
                • Enter same passphrase again : <password>

        --> Generates
            i: aws_id_rsa       :   (contains private key - never to be shared)
            ii: aws_id_rsa.pub  :   (to be used)

• Upload ssh key
    -> [cat] aws_id_rsa.pub
    -> Copy all of above contents
    -> Go to AWS Management Console >> -- >> EC2
    -> On side bar / menu, go to [Network & Security >> Key Pairs]
    -> [[Actions --> Import Key Pair]]
        • Name          :   oj-local-machine (one key for each machine)
        • Key pair file :   [[ contents of : aws_id_rsa.pub ]]
    -> <<Import Key pair>>

    --> You can now use the key above



147. Create EC2 Instance 
•  Launcing the Instance
    -> Go to AWS Management Console >> -- >> EC2 >> -- >> Launch Instance
    -> [Name and Tags]
        • Name : recipe-api-dev-server
    -> [Summary]
        • Number of instances : 1
    -> [Application and OS images]
        • Amazon Linux 2 AMI
    -> [Instance Type]
        • t2.micro
    -> [Key pair (login)]
        • oj-local-machine
    -> [Network Settings]
        • ✔ Allow SSH Traffic from [Anywhere]
        • ✔ Allow HTTP Traffic from the internet
    -> <<Launch Instance>>

• Connecting to the instance
    -> From (C:\Users\AB030WP\.ssh)
        --> ssh-add aws_id_rsa
                • Enter passphrase for aws_id_rsa : <password>

            || Identity added: aws_id_rsa (AB030WP.local)

        --> ssh ec2-user@<<EC2_IP>>
            ...
            • Are you sure you want to continue (yes/no/[fingerprint])? : yes



148. Setup GitHub Deploy Key 
• Generate EC2 ssh key (public)
    --> ssh ec2-user@<<EC2 IP ADDRESS>>
    *--> ssh-keygen -t ed25519 -b 4096
        • Enter the file in which to save the key (/home/ec2-user/.ssh/id_ed25519): <<[Enter]>>
        • Enter passphrase (empty for no response) : <<[Enter]>>
        • Enter passphrase again : <<[Enter]>>
    *--> cat ~/.ssh/id_ed25519.pub

• Go to github
    -> Go to Repo >> -- >> Settings >> -- >> Security >> Deploy Keys
    -> 
        ♦ Title    : server
        ♦ Key      : [[ contents of id_ed25519.pub ]]
    -> Do not check [Allow write access - as we only need to pull code down from the server]
    <<Add Key>>




149. Install Docker, Compose and Git 
• Installing Git
    *--> sudo yum install git -y

 • Installing Docker
    *--> sudo amazon=linux-extras install docker -y
    *--> sudo systemctl enable docker.service
    *--> sudo systemctl start docker.service
    *--> sudo usermod -aG docker ec2-user [Give ec2 user permission to run containers]
    *--> exit [to logout]

    --> ssh ec2-user@<<EC2 IP ADDRESS>> [to log back in]    

• Installing Docker dependencies (Docker Compose)
    *--> sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    *--> sudo chmod +x /usr/local/bin/docker-compose [to give execute permissions on this path]




150. Clone and Configure project 
•
    *--> git clone https://github.com/OgutuJoseph/recipe-app-api.git

    ||
    *--> cp .env.sample .env [copy contents of env sample to env]
    *--> nano env [to edit file]
        ^^ DJANGO_ALLOWED_HOSTS     :   <<EC2_IP>>.compute-1.amazonaws.com



151. Run service 
• Running the service
    *--> docker-compose -f docker-compose-deploy.yml up -d
     [[Browsing]]
    ♦ <<EC2_IP>>.compute-1.amazonaws.com
    ♦ <<EC2_IP>>.compute-1.amazonaws.com/admin
    *--> docker-compose -f docker-compose-deploy.yml run --rm app sh -c "python manage.py createsuperuser"

• Stopping the service
    *--> docker-compose -f docker-compose-deploy.yml down
• Stopping the service and remove all data
    *--> docker-compose -f docker-compose-deploy.yml down --volumes

• Viewing logs
    *--> docker-compose -f docker-compose-deploy.yml logs




152. Updating service 
• Pull new changes to the serve
    *--> git pull origin

• Re-build the app image so it includes the latest code
    *--> docker-compose -f docker-compose-deploy.yml build app

• To apply the update
    *--> docker-compose -f docker-compose-deploy.yml up --no-deps -d app



153. Deployment summary
• 



